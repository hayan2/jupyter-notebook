{"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"ZEGEL5lMETev"}},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3980,"status":"ok","timestamp":1669787400847,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"Q4s7XjMhqlzc","outputId":"e547b8d3-ee30-4194-cc9e-c64784307f9d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: finance-datareader in /usr/local/lib/python3.7/dist-packages (0.9.50)\n","Requirement already satisfied: requests-file in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (1.5.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (4.64.1)\n","Requirement already satisfied: pandas>=0.19.2 in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (1.3.5)\n","Requirement already satisfied: requests>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (2.23.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (4.9.1)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (2022.6)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (1.21.6)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.19.2->finance-datareader) (1.15.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (2022.9.24)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (2.10)\n"]}],"source":["pip install -U finance-datareader"]},{"cell_type":"code","execution_count":24,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1669787400848,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"10cZd7Qsq3Zo"},"outputs":[],"source":["import FinanceDataReader as fdr\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"elapsed":675,"status":"ok","timestamp":1669787401509,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"Ukn19VHpq6en","outputId":"580b0b04-5838-4bd1-d9e8-590388a06c14"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Open   High    Low  Close    Volume    Change\n","Date                                                      \n","2018-05-04  53000  53900  51800  51900  39565391 -0.020755\n","2018-05-08  52600  53200  51900  52600  23104720  0.013487\n","2018-05-09  52600  52800  50900  50900  16128305 -0.032319\n","2018-05-10  51700  51700  50600  51600  13905263  0.013752\n","2018-05-11  52000  52200  51200  51300  10314997 -0.005814"],"text/html":["\n","  <div id=\"df-5941f9c3-08f6-41c0-b0f9-27ed6c000dbe\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Change</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-05-04</th>\n","      <td>53000</td>\n","      <td>53900</td>\n","      <td>51800</td>\n","      <td>51900</td>\n","      <td>39565391</td>\n","      <td>-0.020755</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-08</th>\n","      <td>52600</td>\n","      <td>53200</td>\n","      <td>51900</td>\n","      <td>52600</td>\n","      <td>23104720</td>\n","      <td>0.013487</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-09</th>\n","      <td>52600</td>\n","      <td>52800</td>\n","      <td>50900</td>\n","      <td>50900</td>\n","      <td>16128305</td>\n","      <td>-0.032319</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-10</th>\n","      <td>51700</td>\n","      <td>51700</td>\n","      <td>50600</td>\n","      <td>51600</td>\n","      <td>13905263</td>\n","      <td>0.013752</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-11</th>\n","      <td>52000</td>\n","      <td>52200</td>\n","      <td>51200</td>\n","      <td>51300</td>\n","      <td>10314997</td>\n","      <td>-0.005814</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5941f9c3-08f6-41c0-b0f9-27ed6c000dbe')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5941f9c3-08f6-41c0-b0f9-27ed6c000dbe button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5941f9c3-08f6-41c0-b0f9-27ed6c000dbe');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}],"source":["df = fdr.DataReader('005930', '2018-05-04', '2022-11-30')\n","df.head()"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1669787401510,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"k3grB7uKq-gv","outputId":"e1ff50cc-b91c-4a9f-f262-8d40667179fd"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1127, 6)\n","Open      9.030000e+04\n","High      9.680000e+04\n","Low       8.950000e+04\n","Close     9.100000e+04\n","Volume    9.030618e+07\n","Change    1.047059e-01\n","dtype: float64\n"]}],"source":["print(df.shape)\n","print(df.max())"]},{"cell_type":"code","execution_count":27,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1669787401511,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"xZyyOWy-QS2y"},"outputs":[],"source":["def MinMaxScaler(data):\n","    numerator = data - np.min(data, 0)\n","    denominator = np.max(data, 0) - np.min(data, 0)\n","    return numerator / (denominator + 1e-7)"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"elapsed":638,"status":"ok","timestamp":1669787402141,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"SzM3P1YDQUM8","outputId":"380fade9-5201-47c8-c7e0-27c6bb4f7169"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Open      High       Low    Volume\n","Date                                              \n","2018-05-04  0.294229  0.275338  0.283951  0.409302\n","2018-05-08  0.286660  0.263514  0.285850  0.217675\n","2018-05-09  0.286660  0.256757  0.266857  0.136459\n","2018-05-10  0.269631  0.238176  0.261159  0.110579\n","2018-05-11  0.275307  0.246622  0.272555  0.068783\n","...              ...       ...       ...       ...\n","2022-11-24  0.449385  0.407095  0.456790  0.043289\n","2022-11-25  0.453169  0.407095  0.454891  0.026443\n","2022-11-28  0.436140  0.386824  0.435897  0.048691\n","2022-11-29  0.424787  0.388514  0.435897  0.030357\n","2022-11-30  0.434248  0.405405  0.443495  0.054599\n","\n","[1127 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-0f03e38c-5f22-48e0-92bc-30cf05cd54ce\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-05-04</th>\n","      <td>0.294229</td>\n","      <td>0.275338</td>\n","      <td>0.283951</td>\n","      <td>0.409302</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-08</th>\n","      <td>0.286660</td>\n","      <td>0.263514</td>\n","      <td>0.285850</td>\n","      <td>0.217675</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-09</th>\n","      <td>0.286660</td>\n","      <td>0.256757</td>\n","      <td>0.266857</td>\n","      <td>0.136459</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-10</th>\n","      <td>0.269631</td>\n","      <td>0.238176</td>\n","      <td>0.261159</td>\n","      <td>0.110579</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-11</th>\n","      <td>0.275307</td>\n","      <td>0.246622</td>\n","      <td>0.272555</td>\n","      <td>0.068783</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-11-24</th>\n","      <td>0.449385</td>\n","      <td>0.407095</td>\n","      <td>0.456790</td>\n","      <td>0.043289</td>\n","    </tr>\n","    <tr>\n","      <th>2022-11-25</th>\n","      <td>0.453169</td>\n","      <td>0.407095</td>\n","      <td>0.454891</td>\n","      <td>0.026443</td>\n","    </tr>\n","    <tr>\n","      <th>2022-11-28</th>\n","      <td>0.436140</td>\n","      <td>0.386824</td>\n","      <td>0.435897</td>\n","      <td>0.048691</td>\n","    </tr>\n","    <tr>\n","      <th>2022-11-29</th>\n","      <td>0.424787</td>\n","      <td>0.388514</td>\n","      <td>0.435897</td>\n","      <td>0.030357</td>\n","    </tr>\n","    <tr>\n","      <th>2022-11-30</th>\n","      <td>0.434248</td>\n","      <td>0.405405</td>\n","      <td>0.443495</td>\n","      <td>0.054599</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1127 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f03e38c-5f22-48e0-92bc-30cf05cd54ce')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0f03e38c-5f22-48e0-92bc-30cf05cd54ce button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0f03e38c-5f22-48e0-92bc-30cf05cd54ce');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}],"source":["dfx = df[['Open','High','Low','Volume', 'Close']]\n","dfx = MinMaxScaler(dfx)\n","dfy = dfx[['Close']]\n","dfx = dfx[['Open','High','Low','Volume']]\n","dfx"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":36,"status":"ok","timestamp":1669787402143,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"wUlE_vbQQVbb","outputId":"6ba27cbc-a8d5-49fb-d7b9-a4a37ca47baa"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Open         High          Low       Volume\n","count  1127.000000  1127.000000  1127.000000  1127.000000\n","mean      0.417267     0.379287     0.419413     0.134638\n","std       0.258086     0.231769     0.257448     0.097671\n","min       0.000000     0.000000     0.000000     0.000000\n","25%       0.180700     0.162584     0.182336     0.071268\n","50%       0.369915     0.337838     0.371320     0.112213\n","75%       0.638600     0.578547     0.639126     0.166795\n","max       1.000000     1.000000     1.000000     1.000000"],"text/html":["\n","  <div id=\"df-9f2f0c0d-9e9b-42c4-8ed1-5e2b039b167d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1127.000000</td>\n","      <td>1127.000000</td>\n","      <td>1127.000000</td>\n","      <td>1127.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.417267</td>\n","      <td>0.379287</td>\n","      <td>0.419413</td>\n","      <td>0.134638</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.258086</td>\n","      <td>0.231769</td>\n","      <td>0.257448</td>\n","      <td>0.097671</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.180700</td>\n","      <td>0.162584</td>\n","      <td>0.182336</td>\n","      <td>0.071268</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.369915</td>\n","      <td>0.337838</td>\n","      <td>0.371320</td>\n","      <td>0.112213</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.638600</td>\n","      <td>0.578547</td>\n","      <td>0.639126</td>\n","      <td>0.166795</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f2f0c0d-9e9b-42c4-8ed1-5e2b039b167d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9f2f0c0d-9e9b-42c4-8ed1-5e2b039b167d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9f2f0c0d-9e9b-42c4-8ed1-5e2b039b167d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}],"source":["dfx.describe()"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"elapsed":32,"status":"ok","timestamp":1669787402144,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"hDTDqvYZQXaD","outputId":"4954d1e7-f702-47e9-e6c7-617e544616e6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Close\n","Date                \n","2018-05-04  0.269841\n","2018-05-08  0.282913\n","2018-05-09  0.251167\n","2018-05-10  0.264239\n","2018-05-11  0.258637"],"text/html":["\n","  <div id=\"df-44b09b2d-9da5-49bd-b2ca-7e4ff3187b94\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Close</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-05-04</th>\n","      <td>0.269841</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-08</th>\n","      <td>0.282913</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-09</th>\n","      <td>0.251167</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-10</th>\n","      <td>0.264239</td>\n","    </tr>\n","    <tr>\n","      <th>2018-05-11</th>\n","      <td>0.258637</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44b09b2d-9da5-49bd-b2ca-7e4ff3187b94')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-44b09b2d-9da5-49bd-b2ca-7e4ff3187b94 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-44b09b2d-9da5-49bd-b2ca-7e4ff3187b94');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}],"source":["dfy.head()"]},{"cell_type":"code","execution_count":31,"metadata":{"executionInfo":{"elapsed":31,"status":"ok","timestamp":1669787402145,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"ZcO267njQawf"},"outputs":[],"source":["X = dfx.values.tolist()\n","y = dfy.values.tolist()"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1669787402146,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"d2pj4gD5QcVc","outputId":"bd7c1210-52c1-49ee-eab1-2dfaed8af234"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[0.29422894985753223,\n","  0.27533783783737276,\n","  0.2839506172834113,\n","  0.4093015703464012],\n"," [0.28666035950749924,\n","  0.2635135135130684,\n","  0.28584995251607626,\n","  0.21767480857837268],\n"," [0.28666035950749924,\n","  0.25675675675632303,\n","  0.2668566001894267,\n","  0.13645893255485578],\n"," [0.269631031219925,\n","  0.23817567567527334,\n","  0.2611585944914318,\n","  0.11057940797567417],\n"," [0.27530747398244976,\n","  0.24662162162120502,\n","  0.27255460588742153,\n","  0.0687833568021921]]"]},"metadata":{},"execution_count":32}],"source":["X[:5]"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1669787402147,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"pmR5L3B-Qdc_","outputId":"dc1eafe8-bda1-4396-ad2a-394a48985ccd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[0.26984126984076595],\n"," [0.28291316526557814],\n"," [0.2511671335196057],\n"," [0.26423902894441786],\n"," [0.2586367880480698]]"]},"metadata":{},"execution_count":33}],"source":["y[:5]"]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1669787402149,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"tb6TUERzQf5H","outputId":"242bb89a-63a1-41c1-eccf-cbd7bf1f6c08"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.4720908230833073, 0.4239864864857703, 0.4719848053172422, 0.09898444750284524], [0.4645222327332743, 0.41216216216146595, 0.46438746438658235, 0.10351340679564604], [0.4607379375582578, 0.41891891891821126, 0.4662867996192473, 0.09115255259608393], [0.4531693472082248, 0.40878378378309327, 0.45489078822325757, 0.057876443402339446], [0.4437086092706836, 0.3986486486479752, 0.4453941120599328, 0.05826284778868581], [0.44938505203320833, 0.4003378378371616, 0.4529914529905926, 0.050739661953903684], [0.44938505203320833, 0.40709459459390696, 0.4567901234559225, 0.043288641725019394], [0.4531693472082248, 0.40709459459390696, 0.45489078822325757, 0.026442507108818555], [0.43614001892065063, 0.3868243243236709, 0.43589743589660795, 0.0486905499005199], [0.42478713339560115, 0.38851351351285723, 0.43589743589660795, 0.030356690876234774]] -> [0.4491129785239045]\n"]}],"source":["window_size = 10\n","\n","data_X = []\n","data_y = []\n","\n","for i in range(len(y) - window_size):\n","    _X = X[i : i + window_size] \n","    _y = y[i + window_size]     \n","    data_X.append(_X)\n","    data_y.append(_y)\n","print(_X, \"->\", _y)"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1669787402150,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"W55tZnSnQhB6","outputId":"389b1b24-8ce9-4e83-b2f4-20bea70b4b38"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[0.29422894985753223,\n","  0.27533783783737276,\n","  0.2839506172834113,\n","  0.4093015703464012],\n"," [0.28666035950749924,\n","  0.2635135135130684,\n","  0.28584995251607626,\n","  0.21767480857837268],\n"," [0.28666035950749924,\n","  0.25675675675632303,\n","  0.2668566001894267,\n","  0.13645893255485578],\n"," [0.269631031219925,\n","  0.23817567567527334,\n","  0.2611585944914318,\n","  0.11057940797567417],\n"," [0.27530747398244976,\n","  0.24662162162120502,\n","  0.27255460588742153,\n","  0.0687833568021921],\n"," [0.2563859981073673,\n","  0.22804054054015532,\n","  0.24786324786277708,\n","  0.12226757022956751],\n"," [0.24124881740730134,\n","  0.216216216215851,\n","  0.2326685660014574,\n","  0.16650377115640247],\n"," [0.22232734153221886,\n","  0.2128378378374783,\n","  0.23361823361778988,\n","  0.1340186198206217],\n"," [0.24314096499480956,\n","  0.2179054054050373,\n","  0.2383665716994523,\n","  0.06937058855865358],\n"," [0.2355723746447766,\n","  0.20777027026991932,\n","  0.2374169040831198,\n","  0.026775884501316773]]"]},"metadata":{},"execution_count":35}],"source":["# 10일간의 OHLVC 데이터\n","data_X[0]"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1669787402150,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"VyIALruOQiYK","outputId":"c9fb0f0b-a266-4ae1-e068-128012d0969c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.23436041083056142]"]},"metadata":{},"execution_count":36}],"source":["data_y[0]"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1669787402151,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"uOW7sjlPQkn5","outputId":"f0e2784b-d251-46d2-a69f-90743bef198c"},"outputs":[{"output_type":"stream","name":"stdout","text":["전체 데이터의 크기 : 1117 1117\n"]}],"source":["print('전체 데이터의 크기 :', len(data_X), len(data_y))"]},{"cell_type":"code","execution_count":38,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1669787402152,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"laqx14YRh3nw","outputId":"f4e6f672-0f60-4027-a146-b910d9b7a5dc"},"outputs":[{"output_type":"stream","name":"stdout","text":["훈련 데이터의 크기 : (781, 10, 4) (781, 1)\n","테스트 데이터의 크기 : (336, 10, 4) (336, 1)\n"]}],"source":["train_size = int(len(data_y) * 0.7)\n","train_X = np.array(data_X[0 : train_size])\n","train_y = np.array(data_y[0 : train_size])\n","\n","test_size = len(data_y) - train_size\n","test_X = np.array(data_X[train_size : len(data_X)])\n","test_y = np.array(data_y[train_size : len(data_y)])\n","\n","print('훈련 데이터의 크기 :', train_X.shape, train_y.shape)\n","print('테스트 데이터의 크기 :', test_X.shape, test_y.shape)"]},{"cell_type":"code","execution_count":39,"metadata":{"executionInfo":{"elapsed":22,"status":"ok","timestamp":1669787402153,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"3w3AjzN8iORo"},"outputs":[],"source":["from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, LSTM, Dropout"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":763,"status":"ok","timestamp":1669787402895,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"yCtJWgkziQ_f","outputId":"39b81745-e63b-4790-e588-07ec3a094dd7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," lstm_2 (LSTM)               (None, 10, 20)            2000      \n","                                                                 \n"," dropout_2 (Dropout)         (None, 10, 20)            0         \n","                                                                 \n"," lstm_3 (LSTM)               (None, 20)                3280      \n","                                                                 \n"," dropout_3 (Dropout)         (None, 20)                0         \n","                                                                 \n"," dense_1 (Dense)             (None, 1)                 21        \n","                                                                 \n","=================================================================\n","Total params: 5,301\n","Trainable params: 5,301\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}],"source":["model = Sequential()\n","model.add(LSTM(units=20, activation='relu', return_sequences=True, input_shape=(10, 4)))\n","model.add(Dropout(0.1))\n","model.add(LSTM(units=20, activation='relu'))\n","model.add(Dropout(0.1))\n","model.add(Dense(units=1))\n","model.summary()"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":43952,"status":"ok","timestamp":1669787446837,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"RBe-1t1riTMh","outputId":"fc1dcd7a-a161-46a4-d2c4-e15ad7b8b93c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/70\n","27/27 [==============================] - 3s 12ms/step - loss: 0.1228\n","Epoch 2/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0111\n","Epoch 3/70\n","27/27 [==============================] - 0s 12ms/step - loss: 0.0073\n","Epoch 4/70\n","27/27 [==============================] - 0s 15ms/step - loss: 0.0060\n","Epoch 5/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0058\n","Epoch 6/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0059\n","Epoch 7/70\n","27/27 [==============================] - 0s 12ms/step - loss: 0.0052\n","Epoch 8/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0053\n","Epoch 9/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0043\n","Epoch 10/70\n","27/27 [==============================] - 0s 13ms/step - loss: 0.0056\n","Epoch 11/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0041\n","Epoch 12/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0046\n","Epoch 13/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0043\n","Epoch 14/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0041\n","Epoch 15/70\n","27/27 [==============================] - 0s 17ms/step - loss: 0.0047\n","Epoch 16/70\n","27/27 [==============================] - 0s 18ms/step - loss: 0.0047\n","Epoch 17/70\n","27/27 [==============================] - 0s 16ms/step - loss: 0.0031\n","Epoch 18/70\n","27/27 [==============================] - 1s 21ms/step - loss: 0.0040\n","Epoch 19/70\n","27/27 [==============================] - 1s 27ms/step - loss: 0.0038\n","Epoch 20/70\n","27/27 [==============================] - 1s 27ms/step - loss: 0.0043\n","Epoch 21/70\n","27/27 [==============================] - 1s 27ms/step - loss: 0.0036\n","Epoch 22/70\n","27/27 [==============================] - 1s 26ms/step - loss: 0.0039\n","Epoch 23/70\n","27/27 [==============================] - 1s 22ms/step - loss: 0.0037\n","Epoch 24/70\n","27/27 [==============================] - 1s 19ms/step - loss: 0.0042\n","Epoch 25/70\n","27/27 [==============================] - 1s 23ms/step - loss: 0.0040\n","Epoch 26/70\n","27/27 [==============================] - 1s 26ms/step - loss: 0.0038\n","Epoch 27/70\n","27/27 [==============================] - 1s 27ms/step - loss: 0.0037\n","Epoch 28/70\n","27/27 [==============================] - 1s 27ms/step - loss: 0.0038\n","Epoch 29/70\n","27/27 [==============================] - 1s 25ms/step - loss: 0.0032\n","Epoch 30/70\n","27/27 [==============================] - 1s 26ms/step - loss: 0.0036\n","Epoch 31/70\n","27/27 [==============================] - 1s 24ms/step - loss: 0.0045\n","Epoch 32/70\n","27/27 [==============================] - 1s 27ms/step - loss: 0.0033\n","Epoch 33/70\n","27/27 [==============================] - 1s 22ms/step - loss: 0.0032\n","Epoch 34/70\n","27/27 [==============================] - 1s 20ms/step - loss: 0.0035\n","Epoch 35/70\n","27/27 [==============================] - 1s 28ms/step - loss: 0.0029\n","Epoch 36/70\n","27/27 [==============================] - 1s 29ms/step - loss: 0.0036\n","Epoch 37/70\n","27/27 [==============================] - 1s 28ms/step - loss: 0.0031\n","Epoch 38/70\n","27/27 [==============================] - 1s 26ms/step - loss: 0.0029\n","Epoch 39/70\n","27/27 [==============================] - 1s 22ms/step - loss: 0.0031\n","Epoch 40/70\n","27/27 [==============================] - 1s 24ms/step - loss: 0.0029\n","Epoch 41/70\n","27/27 [==============================] - 1s 24ms/step - loss: 0.0029\n","Epoch 42/70\n","27/27 [==============================] - 1s 21ms/step - loss: 0.0030\n","Epoch 43/70\n","27/27 [==============================] - 1s 25ms/step - loss: 0.0033\n","Epoch 44/70\n","27/27 [==============================] - 1s 24ms/step - loss: 0.0030\n","Epoch 45/70\n","27/27 [==============================] - 1s 24ms/step - loss: 0.0030\n","Epoch 46/70\n","27/27 [==============================] - 0s 18ms/step - loss: 0.0028\n","Epoch 47/70\n","27/27 [==============================] - 1s 23ms/step - loss: 0.0031\n","Epoch 48/70\n","27/27 [==============================] - 0s 12ms/step - loss: 0.0028\n","Epoch 49/70\n","27/27 [==============================] - 0s 12ms/step - loss: 0.0033\n","Epoch 50/70\n","27/27 [==============================] - 0s 12ms/step - loss: 0.0028\n","Epoch 51/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0027\n","Epoch 52/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0025\n","Epoch 53/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0027\n","Epoch 54/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0029\n","Epoch 55/70\n","27/27 [==============================] - 0s 11ms/step - loss: 0.0027\n","Epoch 56/70\n","27/27 [==============================] - 0s 12ms/step - loss: 0.0026\n","Epoch 57/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0028\n","Epoch 58/70\n","27/27 [==============================] - 0s 13ms/step - loss: 0.0023\n","Epoch 59/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0027\n","Epoch 60/70\n","27/27 [==============================] - 0s 13ms/step - loss: 0.0025\n","Epoch 61/70\n","27/27 [==============================] - 0s 12ms/step - loss: 0.0041\n","Epoch 62/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0028\n","Epoch 63/70\n","27/27 [==============================] - 0s 13ms/step - loss: 0.0026\n","Epoch 64/70\n","27/27 [==============================] - 0s 13ms/step - loss: 0.0026\n","Epoch 65/70\n","27/27 [==============================] - 0s 13ms/step - loss: 0.0024\n","Epoch 66/70\n","27/27 [==============================] - 0s 13ms/step - loss: 0.0025\n","Epoch 67/70\n","27/27 [==============================] - 0s 16ms/step - loss: 0.0025\n","Epoch 68/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0031\n","Epoch 69/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0028\n","Epoch 70/70\n","27/27 [==============================] - 0s 14ms/step - loss: 0.0023\n","11/11 [==============================] - 0s 4ms/step\n"]}],"source":["model.compile(optimizer='adam', loss='mean_squared_error')\n","model.fit(train_X, train_y, epochs=70, batch_size=30)\n","pred_y = model.predict(test_X)"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":333},"executionInfo":{"elapsed":816,"status":"ok","timestamp":1669787447645,"user":{"displayName":"호진","userId":"15859172714319981630"},"user_tz":-540},"id":"MswBr1HCiU76","outputId":"b3493db6-a3cf-4694-eb69-aeea4785e6fd"},"outputs":[{"output_type":"stream","name":"stdout","text":["11/11 [==============================] - 0s 4ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["내일 SEC 주가 : [61646.79] KRW\n"]}],"source":["pred_y = model.predict(test_X)\n","\n","plt.figure()\n","plt.plot(test_y, color='red', label='real SEC stock price')\n","plt.plot(pred_y, color='blue', label='predicted SEC stock price')\n","plt.title('SEC stock price prediction')\n","plt.xlabel('time')\n","plt.ylabel('stock price')\n","plt.legend()\n","plt.show()\n","\n","print(\"내일 SEC 주가 :\", df.Close[-1] * pred_y[-1] / dfy.Close[-1], 'KRW')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jGXI63W5ibkr"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNEe0dw9WwYiCnidxdupu3D"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
